package com.epam.libraryservice.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.epam.libraryservice.entity.BookDTO;
import com.epam.libraryservice.entity.BookEntity;
import com.epam.libraryservice.entity.UserDTO;
import com.epam.libraryservice.service.FeignService;

@RestController
@RequestMapping("/library")
public class LibraryController {

	@Autowired
	FeignService feignService;

	@PostMapping("/users")
	public ResponseEntity<UserDTO> addUser(@RequestBody  UserDTO userDTO)
	{
		return feignService.addUser(userDTO);
	}
	
	@GetMapping("/users")
	public ResponseEntity<List<UserDTO>> getAllUsers() {
		return feignService.getAllUsers();
	}

	@GetMapping("/users/{username}")
	public ResponseEntity<UserDTO> getUserByUserName(@PathVariable String username) {
		return feignService.getUserByUserName(username);
	}
	
	@DeleteMapping("/users/{username}")
	public ResponseEntity<String> deleteUser(@PathVariable String username)
	{
		return feignService.deleteUserByUserName(username);
	}
	
	@PutMapping("/users/{username}")
	public ResponseEntity<String> updateUser(@PathVariable String username, @RequestBody UserDTO userDTO)
	{
		return feignService.updateUser(username,userDTO);
	}
	
	@PostMapping("")
	public ResponseEntity<BookEntity> addBook(@RequestBody @Valid BookDTO bookDTO)
	{
		return feignService.addBook(bookDTO);
	}

	@GetMapping("")
	public ResponseEntity<List<BookEntity>> getAllBook()
	{
		return feignService.getAllBooks();
	}

	@GetMapping("/{bookId}")
	public ResponseEntity<BookEntity> getBook(@PathVariable int bookId)
	{
		return feignService.getBookByBookId(bookId);
	}

	@DeleteMapping("/{bookId}")
	public ResponseEntity<String> deleteBook(@PathVariable int bookId)
	{
		return feignService.deleteBookByBookId(bookId);
	}

	@PutMapping("/{bookId}")
	public ResponseEntity<String> updateBook(@PathVariable int bookId, @RequestBody @Valid BookDTO bookDTO)
	{
		return feignService.updateBook(bookId,bookDTO);
	}

}