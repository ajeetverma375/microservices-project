package com.epam.libraryservice.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.epam.libraryservice.entity.LibraryEntity;
import com.epam.libraryservice.exceptions.BookCantBeIssuedException;
import com.epam.libraryservice.exceptions.RecordNotFoundException;
import com.epam.libraryservice.feign.BookFeignClient;
import com.epam.libraryservice.feign.UserFeignClient;
import com.epam.libraryservice.repository.LibraryRepository;

@Service
public class LibraryService {

	@Autowired
	LibraryRepository libraryRepository;
	@Autowired
	BookFeignClient bookFeignClient;
	@Autowired
	UserFeignClient userFeignClient;
	@Autowired
	FeignService feignService;

	public String issueBookToUser(String username, int bookId) {
		userFeignClient.getUser(username);
		bookFeignClient.getBook(bookId);
		int numberOfBooksPerUser = getAllBookByUserName(username).size();
		if (numberOfBooksPerUser >= 1 && numberOfBooksPerUser < 3)
			libraryRepository.save(new LibraryEntity(username, bookId));
		else
			throw new BookCantBeIssuedException("you cant issue more than two books");
		return "book issued successfully to: " + username;
	}

	public List<LibraryEntity> getAllBookByUserName(String username) {
		List<LibraryEntity> book = libraryRepository.findByUsername(username);
		if(book.isEmpty())
			throw new RecordNotFoundException("Record not found with name: "+username );
//		return book.stream().map(bookId->feignService.getBookByBookId(bookId).getBody()).collect(Collectors.toList());
		return book;
	}

	public boolean deleteIssuedBook(String username, int bookId) {
		Optional<LibraryEntity> findByUsernameAndBookId = libraryRepository.findByUsernameAndBookId(username, bookId);
		if (!findByUsernameAndBookId.isPresent())
			throw new RecordNotFoundException("Record not found with the given data");
		return libraryRepository.removeByUsernameAndBookId(username, bookId);
	}

}
